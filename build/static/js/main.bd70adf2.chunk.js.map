{"version":3,"sources":["components/Generic.js","components/Filter.js","components/NewInput.js","components/PersonAPI.js","components/NewPerson.js","components/People.js","components/Notification.js","App.js","index.js"],"names":["valueChangeHandler","setter","event","target","value","defaultErrorHandler","errorMsg","console","log","fetchState","url","handler","errorHandler","axios","get","then","response","data","catch","String","notification","msg","msgSetter","content","typeSetter","type","setTimeout","vanishAfterXSec","duration","Filter","keyword","onChange","NewInput","description","APIErrorHandler","getAllPersons","context","notificationSetter","msgTypeSetter","putWithID","list","request","dataArray","length","name","personSetter","put","updateState","id","number","newList","concat","setHandler","findPerson","existingPersonChecker","persons","find","one","confirmPrompt","window","confirm","removed","filter","updatePerson","post","postRequest","dataAppender","personUpdator","preventDefault","nameSetter","numberSetter","replace","call","deleteWithID","delete","deleteRequest","deleted","deletionUpdate","personDeletor","NewPerson","onClick","People","personMapper","onePerson","a","b","toLowerCase","includes","map","key","style","listStyleType","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","setNotification","msgType","newPersonRequest","stateContext","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd70adf2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nfunction valueChangeHandler(setter) {\r\n  const new_setter = (event) => {\r\n    setter(event.target.value);\r\n  }\r\n\r\n  return new_setter;\r\n}\r\n\r\nfunction isSubstring(a, b) {\r\n  a = a.replace('/s/g', '').toLowerCase();\r\n  b = b.replace('/s/g', '').toLowerCase();\r\n\r\n  return a.includes(b);\r\n}\r\n\r\nfunction defaultErrorHandler(errorMsg) {\r\n  console.log(errorMsg);\r\n}\r\n\r\nfunction fetchState(url, handler=(()=>{}), errorHandler=defaultErrorHandler) {\r\n  axios.get(url)\r\n    .then( (response) => {\r\n      handler(response.data);\r\n    })\r\n    .catch((errorMsg) => {\r\n      console.log(errorMsg);\r\n      errorHandler(String(errorMsg));\r\n    });\r\n}\r\n\r\nfunction postRequest(url, data, handler=(()=>{}), errorHandler=defaultErrorHandler) {\r\n  axios.post(url, data)\r\n    .then( (response) => {\r\n      handler(response.data);\r\n    })\r\n    .catch((errorMsg) => {\r\n      errorHandler(errorMsg);\r\n    });\r\n}\r\n\r\nfunction updateState(url, data, handler = (()=>{}), errorHandler=defaultErrorHandler) {\r\n  axios.put(url, data)\r\n    .then((response) => {\r\n      handler(response.data);\r\n    })\r\n    .catch((errorMsg) => {\r\n      errorHandler(errorMsg);\r\n    });\r\n}\r\n\r\nfunction deleteRequest(url, handler = (()=>{}), errorHandler=defaultErrorHandler) {\r\n  axios.delete(url)\r\n    .then((response) => {\r\n      handler(response.data);\r\n    })\r\n    .catch((errorMsg) => {\r\n      errorHandler(errorMsg);\r\n    })\r\n}\r\n\r\nfunction vanishAfterXSec(msg) {\r\n  const handler = () => {\r\n    msg.msgSetter(null);\r\n    msg.typeSetter(null);\r\n  }\r\n\r\n  return handler;\r\n}\r\n\r\nfunction notification(msg) {\r\n  msg.msgSetter(msg.content);\r\n  msg.typeSetter(msg.type);\r\n\r\n  setTimeout(vanishAfterXSec(msg), msg.duration);\r\n}\r\n\r\nexport {\r\n  valueChangeHandler, \r\n  isSubstring, \r\n  fetchState, \r\n  postRequest, \r\n  updateState,\r\n  deleteRequest,\r\n  notification,\r\n};\r\n","import React from 'react';\r\nimport { valueChangeHandler } from './Generic';\r\n\r\nconst Filter = function( {keyword, setter} ) {\r\n  return (\r\n    <form>\r\n      <p>\r\n        <label>filter shown with </label>\r\n        <input value={keyword} onChange={valueChangeHandler(setter)} />\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { valueChangeHandler } from './Generic';\r\n\r\nconst NewInput = function( {type, description, value, setter} ) {\r\n  return (\r\n    <p>\r\n      <label>\r\n        {description}\r\n        <input type={type} value={value} \r\n          onChange={valueChangeHandler(setter)} \r\n        />\r\n      </label>\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default NewInput;\r\n","import { fetchState, postRequest, updateState, deleteRequest, notification } from './Generic';\r\n\r\nconst personsURL = '/api/persons';\r\n\r\nfunction APIErrorHandler(msgSetter, typeSetter) {\r\n  const handler= (errorMsg) => {\r\n    const error = {\r\n      content: errorMsg,\r\n      type: 'error',\r\n      msgSetter: msgSetter,\r\n      typeSetter: typeSetter,\r\n      duration: 5000,\r\n    };\r\n\r\n    notification(error);\r\n  }\r\n\r\n  return handler;\r\n}\r\n\r\nfunction getAllPersons(handler, context) {\r\n  const updator = () => {\r\n    fetchState(personsURL, handler, \r\n                APIErrorHandler(context.notificationSetter, context.msgTypeSetter)\r\n    );\r\n  }\r\n\r\nreturn updator;\r\n}\r\n\r\nfunction dataAppender(data, context) {\r\n  const updator = ( {name, number} ) => {\r\n    context.personSetter(data.concat( {name, number} ));\r\n\r\n    const msg = {\r\n      content: `Added ${name}`,\r\n      type: 'notification',\r\n      msgSetter: context.notificationSetter,\r\n      typeSetter: context.msgTypeSetter,\r\n      duration: 5000,\r\n    };\r\n\r\n    notification(msg);\r\n  }\r\n\r\n  return updator;\r\n}\r\n\r\nfunction setHandler(list, context) {\r\n  const updator = ( {name, number} ) => {\r\n    const newList = list.concat({number, name});\r\n    context.personSetter(newList);\r\n\r\n    const msg = {\r\n      content: `Updated ${name}`,\r\n      type: 'notification',\r\n      msgSetter: context.notificationSetter,\r\n      typeSetter: context.msgTypeSetter,\r\n      duration: 5000,\r\n    };\r\n\r\n    notification(msg);\r\n  }\r\n\r\n  return updator;\r\n}\r\n\r\nfunction putWithID(list, request, context) {\r\n  const updator = (dataArray) => {\r\n    if(dataArray.length === 0) {\r\n      const error = {\r\n        content: `Information on ${request.name} no longer exists`,\r\n        type: 'error',\r\n        msgSetter: context.notificationSetter,\r\n        typeSetter: context.msgTypeSetter,\r\n        duration: 5000,\r\n      };\r\n\r\n      notification(error);\r\n      context.personSetter(list);\r\n\r\n      return;\r\n    }\r\n\r\n    const [ data ] = dataArray;\r\n\r\n    const singularUrl = `${personsURL}/${data.id}`;\r\n\r\n    const newData = {\r\n      name: request.name,\r\n      number: request.number\r\n    };\r\n\r\n    updateState(singularUrl, newData, setHandler(list, context),\r\n                APIErrorHandler(context.notificationSetter, context.msgTypeSetter)\r\n    );\r\n  }\r\n\r\n  return updator;\r\n}\r\n\r\nfunction findPerson(name, handler, context) {\r\n  const queryUrl = `${personsURL}?name=${name}`;\r\n  fetchState(queryUrl, handler, \r\n              APIErrorHandler(context.notificationSetter, context.msgTypeSetter)\r\n  );\r\n}\r\n\r\nfunction updatePerson(persons, request, context) {\r\n  const removed = persons.filter((one) => (one.name !== request.name));\r\n\r\n  findPerson(request.name, \r\n              putWithID(removed, request, context), \r\n              context\r\n  );\r\n}\r\n\r\nfunction existingPersonChecker(request, context) {\r\n  const checker = (persons) => {\r\n    const existing = persons.find((one) => (one.name === request.name));\r\n\r\n    if(typeof(existing) !== 'undefined') {\r\n      const confirmPrompt = `${request.name} is already added to the ` +\r\n                            'phonebook, replace the old number with a new one?';\r\n\r\n      if(window.confirm(confirmPrompt)) {\r\n        updatePerson(persons, request, context);\r\n      }\r\n    } else {\r\n      console.log(persons);\r\n\r\n      postRequest(personsURL, request, \r\n                  dataAppender(persons, context),\r\n                  APIErrorHandler(context.notificationSetter, context.msgTypeSetter)\r\n      );\r\n    }\r\n  }\r\n\r\n  return checker;\r\n}\r\n\r\nfunction personUpdator(request, context) {\r\n  const updator = (event) => {\r\n    event.preventDefault();\r\n\r\n    context.nameSetter('');\r\n     context.numberSetter('');\r\n\r\n    if(request.name.replace('/s/g', '') === '') {\r\n      return;\r\n    }\r\n\r\n    getAllPersons(existingPersonChecker(request, context), context).call();\r\n  }\r\n\r\n  return updator;\r\n}\r\n\r\nfunction deletionUpdate(newList, deleted, context) {\r\n  const updator = () => {\r\n    context.personSetter(newList);\r\n\r\n    const msg = {\r\n      content: `Deleted ${deleted.name}`,\r\n      type: 'notification',\r\n      msgSetter: context.notificationSetter,\r\n      typeSetter: context.msgTypeSetter,\r\n      duration: 5000,\r\n    };\r\n\r\n    notification(msg);\r\n  }\r\n\r\n  return updator;\r\n}\r\n\r\nfunction deleteWithID(persons, name, context) {\r\n  const updator = (dataArray) => {\r\n    const removed = persons.filter((one) => (one.name !== name));\r\n    \r\n    if(dataArray.length === 0) {\r\n      const error = {\r\n        content: `Information on ${name} no longer exists`,\r\n        type: 'error',\r\n        msgSetter: context.notificationSetter,\r\n        typeSetter: context.msgTypeSetter,\r\n        duration: 5000,\r\n      };\r\n\r\n      notification(error);\r\n      context.personSetter(removed);\r\n      return;\r\n    }\r\n\r\n    const [ data ] = dataArray;\r\n\r\n    const singularUrl = `${personsURL}/${data.id}`;\r\n\r\n    deleteRequest(singularUrl, \r\n                  deletionUpdate(removed, data, context), \r\n                  APIErrorHandler(context.notificationSetter, context.msgTypeSetter)\r\n    );\r\n    context.personSetter(removed);\r\n  }\r\n\r\n  return updator;\r\n}\r\n\r\nfunction personDeletor(persons, context) {\r\n  const updator = (event) => {\r\n    if(window.confirm(`Delete ${event.target.value}?`)) {\r\n      findPerson(event.target.value, deleteWithID(persons, event.target.value, context), \r\n                  context\r\n      );\r\n    }\r\n  }\r\n\r\n  return updator;\r\n}\r\n\r\nexport { getAllPersons, personUpdator, personDeletor };\r\n","import React from 'react';\r\nimport NewInput from './NewInput';\r\nimport { personUpdator } from './PersonAPI';\r\n\r\nconst NewPerson = function( {persons, request, context} ) {\r\n  return (\r\n    <form>\r\n      <NewInput type=\"text\" description=\"name: \" value={request.name} \r\n        setter={context.nameSetter} \r\n      />\r\n      <NewInput type=\"tel\" description=\"number: \" value={request.number} \r\n        setter={context.numberSetter} \r\n      />\r\n      <p>\r\n        <button onClick={personUpdator(request, context)}>\r\n          add/update\r\n        </button>\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NewPerson;\r\n","import React from 'react';\r\nimport { isSubstring } from './Generic';\r\nimport { personDeletor } from './PersonAPI';\r\n\r\nconst People = function( {persons, filter, context} ) {\r\n  const displayedPeople = persons.filter((onePerson) => (\r\n    isSubstring(onePerson.name, filter)\r\n  ));\r\n\r\n  const personMapper = displayedPeople.map(( {name, number} ) => {\r\n    return (\r\n      <li key={name} >\r\n        {name}&nbsp;\r\n        {number}&nbsp;\r\n        <button value={name} onClick={personDeletor(persons, context)}>\r\n          delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return(\r\n    <ul style={{listStyleType: 'none'}} >\r\n      {personMapper}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default People;\r\n","import React from 'react';\r\nimport './Notification.css';\r\n\r\nconst Notification = function( {message, type} ) {\r\n  return (\r\n    <div className={type} >\r\n      {message}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import React, {useState, useEffect} from 'react';\nimport Filter from './components/Filter';\nimport NewPerson from './components/NewPerson';\nimport People from './components/People';\nimport { getAllPersons } from './components/PersonAPI';\nimport Notification from './components/Notification';\n\nconst App = function() {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ nameFilter, setNameFilter ] = useState('');\n  const [ notification, setNotification ] = useState(null);\n  const [ msgType, setMsgType ] = useState('');\n\n  const newPersonRequest = {\n    name: newName,\n    number: newNumber,\n  };\n\n  const stateContext = {\n    personSetter: setPersons,\n    nameSetter: setNewName,\n    numberSetter: setNewNumber,\n    notificationSetter: setNotification,\n    msgTypeSetter: setMsgType,\n  };\n\n  useEffect(getAllPersons(setPersons, stateContext), []);\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification message={notification} type={msgType} />\n      <Filter keyword={nameFilter} setter={setNameFilter} />\n      <h2>add a new</h2>\n      <NewPerson persons={persons} request={newPersonRequest}\n        context={stateContext}\n      />\n      <h2>Numbers</h2>\n      <People persons={persons} filter={nameFilter} context={stateContext} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}